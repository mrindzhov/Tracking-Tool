<Window x:Class="TrackingTool.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:domain="clr-namespace:TrackingTool.Wpf.Domain"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d" WindowStyle="None" SizeToContent="WidthAndHeight"
        MaxWidth="500"
        MaxHeight="400" WindowStartupLocation="CenterScreen"
        Title="Tracking Tool" ResizeMode="CanMinimize"
        TextElement.FontWeight="Regular" TextElement.FontSize="13"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        FontFamily="{StaticResource MaterialDesignFont}" Icon="Resources/Clock1.ico" >

    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" 
                        CanExecute="CommandBinding_CanExecute_1" Executed="CommandBinding_Executed_1" />
        <CommandBinding Command="{x:Static SystemCommands.MinimizeWindowCommand}" 
                        CanExecute="CommandBinding_CanExecute_1" Executed="CommandBinding_Executed_3" />
    </Window.CommandBindings>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Green.Named.Primary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- data template used for the dialogs example, defines a View for a ViewModel of type DateTime  -->
            <DataTemplate DataType="{x:Type system:DateTime}">
                <StackPanel Margin="16">
                    <TextBlock>England win the World Cup:</TextBlock>
                    <TextBlock Margin="0 8 0 0" Text="{Binding }" />
                    <TextBlock Margin="0 8 0 0" >You will never see that again.</TextBlock>
                    <Button  Margin="0 8 0 0" IsDefault="True" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" 
                             Style="{DynamicResource MaterialDesignFlatButton}">AWESOME</Button>
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>

    </Window.Resources>
    <Grid>
        <tb:TaskbarIcon x:Name="myNotifyIcon"
                    Visibility="Visible"
                    ToolTipText="Fallback ToolTip for Windows 10"
                    IconSource="Resources/Clock1.ico"
                    MenuActivation="LeftOrRightClick"
                    PopupActivation="DoubleClick"
                        TrayMouseDoubleClick="MyNotifyIcon_TrayMouseDoubleClick"
                        >
            <tb:TaskbarIcon.TrayToolTip>
                <materialDesign:ColorZone Mode="PrimaryDark" MouseDown="Window_MouseDown" Padding="10 5 10 5" 
                                          materialDesign:ShadowAssist.ShadowDepth="Depth2">
                    <TextBlock TextBlock.FontWeight="Medium">Tracking Tool</TextBlock>
                </materialDesign:ColorZone>
            </tb:TaskbarIcon.TrayToolTip>
        </tb:TaskbarIcon>
        <!--TrayToolTip="{StaticResource TrayToolTip}"-->

        <materialDesign:DialogHost Identifier="RootDialog" SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">

            <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">

                <materialDesign:DrawerHost.LeftDrawerContent>
                    <DockPanel MinWidth="200">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="80"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Image Source="Resources/Clock.png" Stretch="Uniform" Margin="20 20 0 0"
                           HorizontalAlignment="Left"/>
                            <ToggleButton Grid.Column="1" Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                                    DockPanel.Dock="Top" ToolTip="Back" 
                                    HorizontalAlignment="Right" Margin="0 20 20 0"
                                    IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
                            <ListBox Grid.ColumnSpan="2" Grid.Row="1"  x:Name="DemoItemsListBox" Margin="0 16 0 16" SelectedIndex="0"                         
                             ItemsSource="{Binding DemoItems}" PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp">
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="domain:DemoItem">
                                        <TextBlock Text="{Binding Name}" Margin="8 0 32 0" FontSize="20"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                    </DockPanel>
                </materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel>
                    <materialDesign:ColorZone Mode="PrimaryDark" MouseDown="Window_MouseDown" Padding="10 5 10 5" materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                           DockPanel.Dock="Top">
                        <DockPanel>
                            <ToggleButton  Style="{StaticResource MaterialDesignHamburgerToggleButton }" IsChecked="False" 
                                      x:Name="MenuToggleButton"/>
                            <Button Style="{StaticResource MaterialDesignToolButton}" Command="{x:Static SystemCommands.CloseWindowCommand}" 
                                DockPanel.Dock="Right" Foreground="Red"  ToolTip="Close" >
                                <materialDesign:PackIcon Kind="WindowClose"/>
                            </Button>
                            <Button Style="{StaticResource MaterialDesignToolButton}" Command="{x:Static SystemCommands.MinimizeWindowCommand}" 
                                DockPanel.Dock="Right" Foreground="White" ToolTip="Minimize" >
                                <materialDesign:PackIcon Kind="WindowMinimize" />
                            </Button>
                            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="22" Margin="10 0 0 0" TextBlock.FontWeight="Medium">Tracking Tool</TextBlock>
                        </DockPanel>
                    </materialDesign:ColorZone>
                    <Grid>
                        <!--<domain:DocumentationLinks DataContext="{Binding ElementName=DemoItemsListBox, Path=SelectedItem}" Margin="0 2 0 0"/>-->
                        <ScrollViewer 
                        HorizontalScrollBarVisibility="{Binding ElementName=DemoItemsListBox, 
                        Path=SelectedItem.HorizontalScrollBarVisibilityRequirement}"
                                  VerticalScrollBarVisibility="{Binding ElementName=DemoItemsListBox, 
                        Path=SelectedItem.VerticalScrollBarVisibilityRequirement}" 
                                  Padding="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.MarginRequirement}">
                            <ContentControl Content="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.Content}" />
                        </ScrollViewer>

                        <materialDesign:Snackbar HorizontalAlignment="Center" Width="100" Visibility="Hidden"
                                             MessageQueue="{materialDesign:MessageQueue}" x:Name="MainSnackbar"/>
                    </Grid>
                </DockPanel>
            </materialDesign:DrawerHost>
        </materialDesign:DialogHost>
    </Grid>

</Window>